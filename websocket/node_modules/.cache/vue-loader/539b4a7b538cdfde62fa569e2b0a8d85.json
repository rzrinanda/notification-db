{"remainingRequest":"/home/usr/training/day8/exercise/websocket/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/usr/training/day8/exercise/websocket/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/usr/training/day8/exercise/websocket/src/App.vue","mtime":1576657787017},{"path":"/home/usr/training/day8/exercise/websocket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/usr/training/day8/exercise/websocket/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/usr/training/day8/exercise/websocket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/usr/training/day8/exercise/websocket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IE5vdHlmIH0gZnJvbSAibm90eWYiOwppbXBvcnQgIm5vdHlmL25vdHlmLm1pbi5jc3MiOwppbXBvcnQgQ2hhdEZvcm0gZnJvbSAiLi9jb21wb25lbnRzL0NoYXRGb3JtIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnQ6IHsKICAgIENoYXRGb3JtCiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgbm90aWZpZXI6IG5ldyBOb3R5ZigpLAogICAgbWU6ICJwZXJzb24xIiwKICAgIHRvOiAicGVyc29uMiIsCiAgICBtZXNzYWdlOiAiSGVsbG8iLAogICAgaW5jb21pbmdNZXNzYWdlczogW10sCiAgICBpbmNvbWluZ1ByaXZhdGVNZXNzYWdlczogW10sCiAgICBjb25uZWN0aW9uOiBudWxsCiAgfSksCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlZ2lzdGVyV1MoKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBzZW5kTWVzc2FnZSgpIHsKICAgICAgY29uc3QgZGF0YSA9IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICBwcml2YXRlOiBmYWxzZSwKICAgICAgICBmcm9tOiB0aGlzLm1lLAogICAgICAgIHRvOiB0aGlzLnRvLAogICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZQogICAgICB9KTsKICAgICAgY29uc3QgZm9ybSA9IHsKICAgICAgICBuYW1lOiB0aGlzLm1lLAogICAgICAgIHRvOiB0aGlzLnRvLAogICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSwKICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpCiAgICAgIH0KCiAgICAgIHRoaXMuY29ubmVjdGlvbi5zZW5kKGRhdGEpOwogICAgICBjb25zdCByZXNwb25zZSA9IGF4aW9zLnBvc3QoImNoYXRzL2luc2VydCIsIGZvcm0pOwogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgIH0sCgogICAgcHJpdmF0ZU1lc3NhZ2UoKSB7CiAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgcHJpdmF0ZTogdHJ1ZSwKICAgICAgICBmcm9tOiB0aGlzLm1lLAogICAgICAgIHRvOiB0aGlzLnRvLAogICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZQogICAgICB9KTsKCiAgICAgIGNvbnN0IHBheWxvYWQgPSB7CiAgICAgICAgbmFtZTogdGhpcy5tZSwKICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksCiAgICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlCiAgICAgIH07CgogICAgICB0aGlzLmluY29taW5nUHJpdmF0ZU1lc3NhZ2VzLnB1c2gocGF5bG9hZCk7CgogICAgICB0aGlzLmNvbm5lY3Rpb24uc2VuZChkYXRhKTsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBheGlvcy5wb3N0KCJjaGF0cy9pbnNlcnQiLCBmb3JtKTsKICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICB9LAoKICAgIHJlZ2lzdGVyV1MoKSB7CiAgICAgIGNvbnN0IHVybCA9ICJ3czovL2xvY2FsaG9zdDo4MDAxIjsKICAgICAgdGhpcy5jb25uZWN0aW9uID0gbmV3IFdlYlNvY2tldCh1cmwpOwoKICAgICAgdGhpcy5jb25uZWN0aW9uLm9ub3BlbiA9IGV2ZW50ID0+IHsKICAgICAgICBjb25zb2xlLmxvZygiV2UgYXJlIGNvbm5lY3RlZCIsIGV2ZW50KTsKICAgICAgfTsKCiAgICAgIHRoaXMuY29ubmVjdGlvbi5vbmVycm9yID0gZXJyb3IgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGBXZWJTb2NrZXQgZXJyb3I6ICR7ZXJyb3J9YCk7CiAgICAgIH07CgogICAgICB0aGlzLmNvbm5lY3Rpb24ub25tZXNzYWdlID0gZXZlbnQgPT4gewogICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpOwoKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKCiAgICAgICAgaWYgKGRhdGEucHJpdmF0ZSAmJiBkYXRhLnRvID09PSB0aGlzLm1lKSB7CiAgICAgICAgICBjb25zdCBwYXlsb2FkID0gewogICAgICAgICAgICBuYW1lOiBkYXRhLmZyb20sCiAgICAgICAgICAgIGRhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSwKICAgICAgICAgICAgbWVzc2FnZTogZGF0YS5tZXNzYWdlCiAgICAgICAgICB9OwoKICAgICAgICAgIHRoaXMuaW5jb21pbmdQcml2YXRlTWVzc2FnZXMucHVzaChwYXlsb2FkKTsKCiAgICAgICAgICB0aGlzLm5vdGlmaWVyLnN1Y2Nlc3MoZGF0YS5tZXNzYWdlKTsKICAgICAgICB9IGVsc2UgaWYgKCFkYXRhLnByaXZhdGUpIHsKICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSB7CiAgICAgICAgICAgIG5hbWU6IGRhdGEuZnJvbSwKICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLAogICAgICAgICAgICBtZXNzYWdlOiBkYXRhLm1lc3NhZ2UKICAgICAgICAgIH07CgogICAgICAgICAgdGhpcy5pbmNvbWluZ01lc3NhZ2VzLnB1c2gocGF5bG9hZCk7CgogICAgICAgICAgdGhpcy5ub3RpZmllci5zdWNjZXNzKGRhdGEubWVzc2FnZSk7CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0KfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"flex justify-between\">\n      <div>\n        <h1>Send Notification</h1>\n\n        <!-- <chat-form /> -->\n        <form method=\"POST\" @submit.prevent=\"sendMessage\">\n          <p>\n            Me\n            <input type=\"text\" v-model=\"me\" required />\n          </p>\n          <p>\n            To\n            <input type=\"text\" v-model=\"to\" required />\n            <button type=\"button\" @click=\"privateMessage\">Private Message</button>\n          </p>\n          <p>\n            Message\n            <input type=\"text\" v-model=\"message\" required />\n          </p>\n\n          <button type=\"submit\">Public Message</button>\n        </form>\n        <ul>\n          <li v-for=\"(msg, i) in incomingMessages\" :key=\"i\">\n            <!-- [{{ msg.date }}]   -->\n            {{ msg.name }} :\n            {{ msg.message }}\n          </li>\n        </ul>\n        <ul>\n          <li v-for=\"(msg, i) in incomingPrivateMessages\" :key=\"i\">\n            <!-- [{{ msg.date }}]   -->\n            {{ msg.name }} :\n            {{ msg.message }}\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Notyf } from \"notyf\";\nimport \"notyf/notyf.min.css\";\nimport ChatForm from \"./components/ChatForm\";\nimport axios from \"axios\";\n\nexport default {\n  component: {\n    ChatForm\n  },\n  data: () => ({\n    notifier: new Notyf(),\n    me: \"person1\",\n    to: \"person2\",\n    message: \"Hello\",\n    incomingMessages: [],\n    incomingPrivateMessages: [],\n    connection: null\n  }),\n\n  mounted() {\n    this.registerWS();\n  },\n\n  methods: {\n    sendMessage() {\n      const data = JSON.stringify({\n        private: false,\n        from: this.me,\n        to: this.to,\n        message: this.message\n      });\n      const form = {\n        name: this.me,\n        to: this.to,\n        message: this.message,\n        date: new Date()\n      }\n\n      this.connection.send(data);\n      const response = axios.post(\"chats/insert\", form);\n      console.log(response)\n    },\n\n    privateMessage() {\n      const data = JSON.stringify({\n        private: true,\n        from: this.me,\n        to: this.to,\n        message: this.message\n      });\n\n      const payload = {\n        name: this.me,\n        date: new Date().toISOString(),\n        message: this.message\n      };\n\n      this.incomingPrivateMessages.push(payload);\n\n      this.connection.send(data);\n      const response = axios.post(\"chats/insert\", form);\n      console.log(response)\n    },\n\n    registerWS() {\n      const url = \"ws://localhost:8001\";\n      this.connection = new WebSocket(url);\n\n      this.connection.onopen = event => {\n        console.log(\"We are connected\", event);\n      };\n\n      this.connection.onerror = error => {\n        console.log(`WebSocket error: ${error}`);\n      };\n\n      this.connection.onmessage = event => {\n        const data = JSON.parse(event.data);\n\n        console.log(data);\n\n        if (data.private && data.to === this.me) {\n          const payload = {\n            name: data.from,\n            date: new Date().toISOString(),\n            message: data.message\n          };\n\n          this.incomingPrivateMessages.push(payload);\n\n          this.notifier.success(data.message);\n        } else if (!data.private) {\n          const payload = {\n            name: data.from,\n            date: new Date().toISOString(),\n            message: data.message\n          };\n\n          this.incomingMessages.push(payload);\n\n          this.notifier.success(data.message);\n        }\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  margin: auto;\n  width: 800px;\n}\n.flex {\n  display: flex;\n}\n.justify-between {\n  justify-content: space-between;\n}\n</style>\n"]}]}